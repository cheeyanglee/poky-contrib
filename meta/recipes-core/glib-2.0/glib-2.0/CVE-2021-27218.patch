From 5532dc098020ae2c5a9bf1feb3c6cb4d42f71da2 Mon Sep 17 00:00:00 2001
From: Krzesimir Nowak <qdlacz@gmail.com>
Date: Wed, 10 Feb 2021 23:51:07 +0100
Subject: [PATCH] gbytearray: Do not accept too large byte arrays

GByteArray uses guint for storing the length of the byte array, but it
also has a constructor (g_byte_array_new_take) that takes length as a
gsize. gsize may be larger than guint (64 bits for gsize vs 32 bits
for guint). It is possible to call the function with a value greater
than G_MAXUINT, which will result in silent length truncation. This
may happen as a result of unreffing GBytes into GByteArray, so rather
be loud about it.

(Test case tweaked by Philip Withnall.)

Upstream-Status: Backport [https://gitlab.gnome.org/GNOME/glib/-/commit/5532dc098020ae2c5a9bf1feb3c6cb4d42f71da2?merge_request_iid=1942]
CVE: CVE-2021-27218
Signed-off-by: Chee Yang Lee <chee.yang.lee@intel.com>
---
 glib/garray.c      |  2 ++
 1 files changed, 2 insertions(+)

diff --git a/glib/garray.c b/glib/garray.c
index de720210c..2b66f16a6 100644
--- a/glib/garray.c
+++ b/glib/garray.c
@@ -2272,6 +2276,8 @@ g_byte_array_new_take (guint8 *data,
   GByteArray *array;
   GRealArray *real;
 
+  g_return_val_if_fail (len <= G_MAXUINT, NULL);
+
   array = g_byte_array_new ();
   real = (GRealArray *)array;
   g_assert (real->data == NULL);

